spring:
  application:
    name:
      accounts-mycroservice
  docker:
    compose:
      enabled: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://www.mykeycloak.com:8040/auth/realms/recipe-app
          jwk-set-uri: "${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs"
      client:
        registration:
          keycloak:
            client-id: java-client
            client-secret: jHegYaOQdSfWSj1ZglLakwZuuC0yBgly
            scope: openid,profile,email
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            token-uri: https://www.mykeycloak.com:8040/auth/realms/recipe-app/protocol/openid-connect/token
            user-info-uri: https://www.mykeycloak.com:8040/auth/realms/recipe-app/protocol/openid-connect/userinfo
            jwk-set-uri: https://www.mykeycloak.com:8040/auth/realms/recipe-app/protocol/openid-connect/certs
            issuer-uri: https://www.mykeycloak.com:8040/auth/realms/recipe-app

keycloak:
  server-url: https://www.mykeycloak.com:8040
  realm: master
  admin-client-id: your-client-id
  admin-client-secret: your-client-secret
  users-endpoint: ${keycloak.server-url}/admin/realms/${keycloak.realm}/users
  groups-endpoint: ${keycloak.server-url}/admin/realms/${keycloak.realm}/groups
  roles-endpoint: ${keycloak.server-url}/admin/realms/${keycloak.realm}/roles

server:
  port: 8463
  ssl:
    key-alias: "recipessl"
    key-password: "SSLkeystorePASS1"
    key-store: "classpath:recipessl.pfx"
    key-store-password: "SSLkeystorePASS1"
    trust-store: "classpath:recipessl.pfx"
    trust-store-password: "SSLkeystorePASS1"
    enabled: true

# Logging (optional)
logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs.yaml
  swagger-ui:
    path: /swagger-ui/index.html